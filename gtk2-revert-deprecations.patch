--- gtk+-2.24.23/gdk/gdkdisplay.h
+++ gtk+-2.24.23/gdk/gdkdisplay.h
@@ -193,10 +193,8 @@ void             gdk_display_warp_pointe
 						    gint                   x,
 						    gint                   y);
 
-#ifndef GDK_DISABLE_DEPRECATED
 GdkDisplayPointerHooks *gdk_display_set_pointer_hooks (GdkDisplay                   *display,
 						       const GdkDisplayPointerHooks *new_hooks);
-#endif
 
 GdkDisplay *gdk_display_open_default_libgtk_only (void);
 
--- gtk+-2.24.23/gdk/gdkdnd.h
+++ gtk+-2.24.23/gdk/gdkdnd.h
@@ -104,9 +104,7 @@ struct _GdkDragContextClass {
 /* Drag and Drop */
 
 GType            gdk_drag_context_get_type   (void) G_GNUC_CONST;
-#if !defined (GDK_DISABLE_DEPRECATED) || defined (GDK_COMPILATION)
 GdkDragContext * gdk_drag_context_new        (void);
-#endif
 
 GList           *gdk_drag_context_list_targets         (GdkDragContext *context);
 GdkDragAction    gdk_drag_context_get_actions          (GdkDragContext *context);
@@ -154,7 +152,6 @@ void    gdk_drag_find_window_for_screen
 					   GdkDragProtocol  *protocol);
 
 #ifndef GDK_MULTIHEAD_SAFE
-#ifndef GDK_DISABLE_DEPRECATED
 GdkNativeWindow gdk_drag_get_protocol (GdkNativeWindow   xid,
 				       GdkDragProtocol  *protocol);
 
@@ -164,7 +161,6 @@ void    gdk_drag_find_window  (GdkDragCo
 			       gint              y_root,
 			       GdkWindow       **dest_window,
 			       GdkDragProtocol  *protocol);
-#endif /* GDK_DISABLE_DEPRECATED */
 #endif /* GDK_MULTIHEAD_SAFE */
 
 gboolean        gdk_drag_motion      (GdkDragContext *context,
--- gtk+-2.24.23/gdk/gdkdrawable.h
+++ gtk+-2.24.23/gdk/gdkdrawable.h
@@ -250,19 +250,16 @@ gpointer        gdk_drawable_get_data
 					   const gchar    *key);
 #endif /* GDK_DISABLE_DEPRECATED */
 
-void	        gdk_drawable_set_colormap (GdkDrawable	  *drawable,
-					   GdkColormap	  *colormap);
-GdkColormap*    gdk_drawable_get_colormap (GdkDrawable	  *drawable);
-gint            gdk_drawable_get_depth    (GdkDrawable	  *drawable);
-
-#if !defined (GDK_DISABLE_DEPRECATED)
 void            gdk_drawable_get_size     (GdkDrawable	  *drawable,
 					   gint	          *width,
 					   gint  	  *height);
+void	        gdk_drawable_set_colormap (GdkDrawable	  *drawable,
+					   GdkColormap	  *colormap);
+GdkColormap*    gdk_drawable_get_colormap (GdkDrawable	  *drawable);
 GdkVisual*      gdk_drawable_get_visual   (GdkDrawable	  *drawable);
+gint            gdk_drawable_get_depth    (GdkDrawable	  *drawable);
 GdkScreen*	gdk_drawable_get_screen   (GdkDrawable    *drawable);
 GdkDisplay*	gdk_drawable_get_display  (GdkDrawable    *drawable);
-#endif /* GDK_DISABLE_DEPRECATED */
 
 #ifndef GDK_DISABLE_DEPRECATED
 GdkDrawable*    gdk_drawable_ref          (GdkDrawable    *drawable);
@@ -271,7 +268,6 @@ void            gdk_drawable_unref
 
 /* Drawing
  */
-#ifndef GDK_DISABLE_DEPRECATED
 void gdk_draw_point     (GdkDrawable      *drawable,
 			 GdkGC            *gc,
 			 gint              x,
@@ -303,12 +299,17 @@ void gdk_draw_polygon   (GdkDrawable
 			 gboolean          filled,
 			 const GdkPoint   *points,
 			 gint              n_points);
+#if !defined (GDK_DISABLE_DEPRECATED) || defined (GTK_COMPILATION)
+/* Used by gtk_default_draw_string () */
 void gdk_draw_string    (GdkDrawable      *drawable,
 			 GdkFont          *font,
 			 GdkGC            *gc,
 			 gint              x,
 			 gint              y,
 			 const gchar      *string);
+#endif /* !GDK_DISABLE_DEPRECATED || GTK_COMPILATION */
+#if !defined (GDK_DISABLE_DEPRECATED) || defined (GDK_COMPILATION)
+/* Used by gdk_pixmap_draw_text (), gdk_window_draw_text() */
 void gdk_draw_text      (GdkDrawable      *drawable,
 			 GdkFont          *font,
 			 GdkGC            *gc,
@@ -316,6 +317,7 @@ void gdk_draw_text      (GdkDrawable
 			 gint              y,
 			 const gchar      *text,
 			 gint              text_length);
+/* Used by gdk_pixmap_draw_text_wc (), gdk_window_draw_text_wc () */
 void gdk_draw_text_wc   (GdkDrawable      *drawable,
 			 GdkFont          *font,
 			 GdkGC            *gc,
@@ -323,6 +325,7 @@ void gdk_draw_text_wc   (GdkDrawable
 			 gint              y,
 			 const GdkWChar   *text,
 			 gint              text_length);
+#endif /* !GDK_DISABLE_DEPRECATED || GDK_COMPILATION */
 void gdk_draw_drawable  (GdkDrawable      *drawable,
 			 GdkGC            *gc,
 			 GdkDrawable      *src,
@@ -410,8 +413,10 @@ void gdk_draw_trapezoids         (GdkDra
 				  const GdkTrapezoid *trapezoids,
 				  gint                n_trapezoids);
 
+#ifndef GDK_DISABLE_DEPRECATED
 #define gdk_draw_pixmap                gdk_draw_drawable
 #define gdk_draw_bitmap                gdk_draw_drawable
+#endif /* GDK_DISABLE_DEPRECATED */
 
 GdkImage* gdk_drawable_get_image      (GdkDrawable *drawable,
                                        gint         x,
@@ -426,7 +431,6 @@ GdkImage *gdk_drawable_copy_to_image (Gd
 				      gint          dest_y,
 				      gint          width,
 				      gint          height);
-#endif /* GDK_DISABLE_DEPRECATED */
 
 GdkRegion *gdk_drawable_get_clip_region    (GdkDrawable *drawable);
 GdkRegion *gdk_drawable_get_visible_region (GdkDrawable *drawable);
--- gtk+-2.24.23/gdk/gdkfont.h
+++ gtk+-2.24.23/gdk/gdkfont.h
@@ -24,7 +24,7 @@
  * GTK+ at ftp://ftp.gtk.org/pub/gtk/. 
  */
 
-#if !defined(GDK_DISABLE_DEPRECATED) || defined(GDK_COMPILATION)
+#if !defined(GDK_DISABLE_DEPRECATED) || defined(GDK_COMPILATION) || defined(GTK_COMPILATION)
 
 #ifndef __GDK_FONT_H__
 #define __GDK_FONT_H__
--- gtk+-2.24.23/gdk/gdkgc.h
+++ gtk+-2.24.23/gdk/gdkgc.h
@@ -220,15 +220,16 @@ struct _GdkGCClass
 };
 
 
-#ifndef GDK_DISABLE_DEPRECATED
 GType  gdk_gc_get_type            (void) G_GNUC_CONST;
 GdkGC *gdk_gc_new		  (GdkDrawable	    *drawable);
 GdkGC *gdk_gc_new_with_values	  (GdkDrawable	    *drawable,
 				   GdkGCValues	    *values,
 				   GdkGCValuesMask   values_mask);
 
+#ifndef GDK_DISABLE_DEPRECATED
 GdkGC *gdk_gc_ref		  (GdkGC	    *gc);
 void   gdk_gc_unref		  (GdkGC	    *gc);
+#endif
 
 void   gdk_gc_get_values	  (GdkGC	    *gc,
 				   GdkGCValues	    *values);
@@ -239,8 +240,10 @@ void   gdk_gc_set_foreground	  (GdkGC
 				   const GdkColor   *color);
 void   gdk_gc_set_background	  (GdkGC	    *gc,
 				   const GdkColor   *color);
+#ifndef GDK_DISABLE_DEPRECATED
 void   gdk_gc_set_font		  (GdkGC	    *gc,
 				   GdkFont	    *font);
+#endif /* GDK_DISABLE_DEPRECATED */
 void   gdk_gc_set_function	  (GdkGC	    *gc,
 				   GdkFunction	     function);
 void   gdk_gc_set_fill		  (GdkGC	    *gc,
@@ -290,6 +293,7 @@ void         gdk_gc_set_rgb_bg_color (Gd
 				      const GdkColor *color);
 GdkScreen *  gdk_gc_get_screen	     (GdkGC          *gc);
 
+#ifndef GDK_DISABLE_DEPRECATED
 #define gdk_gc_destroy                 g_object_unref
 #endif /* GDK_DISABLE_DEPRECATED */
 
--- gtk+-2.24.23/gdk/gdk.h
+++ gtk+-2.24.23/gdk/gdk.h
@@ -77,8 +77,8 @@ void gdk_pre_parse_libgtk_only
 
 #ifndef GDK_DISABLE_DEPRECATED
 void  	  gdk_exit		   	(gint	    	 error_code);
-gchar*	  gdk_set_locale	   	(void);
 #endif /* GDK_DISABLE_DEPRECATED */
+gchar*	  gdk_set_locale	   	(void);
 
 const char *         gdk_get_program_class (void);
 void                 gdk_set_program_class (const char *program_class);
@@ -96,12 +96,15 @@ gboolean  gdk_get_use_xshm		(void);
 gchar*	                  gdk_get_display		(void);
 const gchar*	          gdk_get_display_arg_name	(void);
 
-#ifndef GDK_DISABLE_DEPRECATED
+#if !defined (GDK_DISABLE_DEPRECATED) || defined (GTK_COMPILATION)
+/* Used by gtk_input_add_full () */
 gint gdk_input_add_full	  (gint		     source,
 			   GdkInputCondition condition,
 			   GdkInputFunction  function,
 			   gpointer	     data,
 			   GDestroyNotify    destroy);
+#endif /* !GDK_DISABLE_DEPRECATED || GTK_COMPILATION */
+#ifndef GDK_DISABLE_DEPRECATED
 gint gdk_input_add	  (gint		     source,
 			   GdkInputCondition condition,
 			   GdkInputFunction  function,
--- gtk+-2.24.23/gdk/gdkimage.h
+++ gtk+-2.24.23/gdk/gdkimage.h
@@ -92,12 +92,12 @@ struct _GdkImageClass
 
 GType     gdk_image_get_type   (void) G_GNUC_CONST;
 
-#ifndef GDK_DISABLE_DEPRECATED
 GdkImage*  gdk_image_new       (GdkImageType  type,
 				GdkVisual    *visual,
 				gint	      width,
 				gint	      height);
 
+#ifndef GDK_DISABLE_DEPRECATED
 GdkImage*  gdk_image_get       (GdkDrawable  *drawable,
 				gint	      x,
 				gint	      y,
@@ -106,6 +106,7 @@ GdkImage*  gdk_image_get       (GdkDrawa
 
 GdkImage * gdk_image_ref       (GdkImage     *image);
 void       gdk_image_unref     (GdkImage     *image);
+#endif
 
 void	   gdk_image_put_pixel (GdkImage     *image,
 				gint	      x,
@@ -137,6 +138,7 @@ GdkImage* gdk_image_new_bitmap (GdkVisua
 				gint          height);
 #endif /* GDK_ENABLE_BROKEN */
 
+#ifndef GDK_DISABLE_DEPRECATED
 #define gdk_image_destroy              g_object_unref
 #endif /* GDK_DISABLE_DEPRECATED */
 
--- gtk+-2.24.23/gdk/gdkpixmap.h
+++ gtk+-2.24.23/gdk/gdkpixmap.h
@@ -70,7 +70,6 @@ GdkPixmap* gdk_pixmap_new		(GdkDrawable
 					 gint	      width,
 					 gint	      height,
 					 gint	      depth);
-#ifndef GDK_DISABLE_DEPRECATED
 GdkBitmap* gdk_bitmap_create_from_data	(GdkDrawable *drawable,
 					 const gchar *data,
 					 gint	      width,
@@ -101,7 +100,6 @@ GdkPixmap* gdk_pixmap_colormap_create_fr
 						  GdkBitmap     **mask,
 						  const GdkColor *transparent_color,
 						  gchar         **data);
-#endif
 
 void          gdk_pixmap_get_size                (GdkPixmap      *pixmap,
                                                   gint	         *width,
--- gtk+-2.24.23/gdk/gdkproperty.h
+++ gtk+-2.24.23/gdk/gdkproperty.h
@@ -67,12 +67,16 @@ void     gdk_property_change (GdkWindow
 void     gdk_property_delete (GdkWindow     *window,
 			      GdkAtom        property);
 #ifndef GDK_MULTIHEAD_SAFE
-#ifndef GDK_DISABLE_DEPRECATED
 gint gdk_text_property_to_text_list (GdkAtom        encoding,
 				     gint           format,
 				     const guchar  *text,
 				     gint           length,
 				     gchar       ***list);
+gint gdk_text_property_to_utf8_list (GdkAtom        encoding,
+				     gint           format,
+				     const guchar  *text,
+				     gint           length,
+				     gchar       ***list);
 gboolean gdk_utf8_to_compound_text (const gchar *str,
 				    GdkAtom     *encoding,
 				    gint        *format,
@@ -83,29 +87,22 @@ gint gdk_string_to_compound_text    (con
 				     gint          *format,
 				     guchar       **ctext,
 				     gint          *length);
-gint gdk_text_property_to_utf8_list (GdkAtom        encoding,
-				     gint           format,
-				     const guchar  *text,
-				     gint           length,
-				     gchar       ***list);
-#endif
 #endif
 
-gint gdk_text_property_to_utf8_list_for_display (GdkDisplay     *display,
+gint gdk_text_property_to_text_list_for_display (GdkDisplay     *display,
 						 GdkAtom         encoding,
 						 gint            format,
 						 const guchar   *text,
 						 gint            length,
 						 gchar        ***list);
-
-gchar   *gdk_utf8_to_string_target   (const gchar *str);
-#ifndef GDK_DISABLE_DEPRECATED
-gint gdk_text_property_to_text_list_for_display (GdkDisplay     *display,
+gint gdk_text_property_to_utf8_list_for_display (GdkDisplay     *display,
 						 GdkAtom         encoding,
 						 gint            format,
 						 const guchar   *text,
 						 gint            length,
 						 gchar        ***list);
+  
+gchar   *gdk_utf8_to_string_target   (const gchar *str);
 gint     gdk_string_to_compound_text_for_display (GdkDisplay   *display,
 						  const gchar  *str,
 						  GdkAtom      *encoding,
@@ -121,7 +118,6 @@ gboolean gdk_utf8_to_compound_text_for_d
 
 void gdk_free_text_list             (gchar        **list);
 void gdk_free_compound_text         (guchar        *ctext);
-#endif
 
 G_END_DECLS
 
--- gtk+-2.24.23/gdk/gdkregion.h
+++ gtk+-2.24.23/gdk/gdkregion.h
@@ -35,7 +35,6 @@
 
 G_BEGIN_DECLS
 
-#ifndef GDK_DISABLE_DEPRECATED
 /* GC fill rule for polygons
  *  EvenOddRule
  *  WindingRule
@@ -45,7 +44,6 @@ typedef enum
   GDK_EVEN_ODD_RULE,
   GDK_WINDING_RULE
 } GdkFillRule;
-#endif
 
 /* Types of overlapping between a rectangle and a region
  * GDK_OVERLAP_RECTANGLE_IN: rectangle is in region
@@ -59,17 +57,13 @@ typedef enum
   GDK_OVERLAP_RECTANGLE_PART
 } GdkOverlapType;
 
-#ifndef GDK_DISABLE_DEPRECATED
 typedef void (* GdkSpanFunc) (GdkSpan *span,
                               gpointer data);
-#endif
 
 GdkRegion    * gdk_region_new             (void);
-#ifndef GDK_DISABLE_DEPRECATED
 GdkRegion    * gdk_region_polygon         (const GdkPoint     *points,
                                            gint                n_points,
                                            GdkFillRule         fill_rule);
-#endif
 GdkRegion    * gdk_region_copy            (const GdkRegion    *region);
 GdkRegion    * gdk_region_rectangle       (const GdkRectangle *rectangle);
 void           gdk_region_destroy         (GdkRegion          *region);
@@ -83,10 +77,8 @@ void           gdk_region_get_rectangles
 gboolean       gdk_region_empty           (const GdkRegion    *region);
 gboolean       gdk_region_equal           (const GdkRegion    *region1,
                                            const GdkRegion    *region2);
-#ifndef GDK_DISABLE_DEPRECATED
 gboolean       gdk_region_rect_equal      (const GdkRegion    *region,
                                            const GdkRectangle *rectangle);
-#endif
 gboolean       gdk_region_point_in        (const GdkRegion    *region,
                                            int                 x,
                                            int                 y);
@@ -96,11 +88,9 @@ GdkOverlapType gdk_region_rect_in
 void           gdk_region_offset          (GdkRegion          *region,
                                            gint                dx,
                                            gint                dy);
-#ifndef GDK_DISABLE_DEPRECATED
 void           gdk_region_shrink          (GdkRegion          *region,
                                            gint                dx,
                                            gint                dy);
-#endif
 void           gdk_region_union_with_rect (GdkRegion          *region,
                                            const GdkRectangle *rect);
 void           gdk_region_intersect       (GdkRegion          *source1,
@@ -112,14 +102,12 @@ void           gdk_region_subtract
 void           gdk_region_xor             (GdkRegion          *source1,
                                            const GdkRegion    *source2);
 
-#ifndef GDK_DISABLE_DEPRECATED
 void   gdk_region_spans_intersect_foreach (GdkRegion          *region,
                                            const GdkSpan      *spans,
                                            int                 n_spans,
                                            gboolean            sorted,
                                            GdkSpanFunc         function,
                                            gpointer            data);
-#endif
 
 G_END_DECLS
 
--- gtk+-2.24.23/gdk/gdkrgb.h
+++ gtk+-2.24.23/gdk/gdkrgb.h
@@ -37,15 +37,6 @@ G_BEGIN_DECLS
 
 typedef struct _GdkRgbCmap GdkRgbCmap;
 
-typedef enum
-{
-  GDK_RGB_DITHER_NONE,
-  GDK_RGB_DITHER_NORMAL,
-  GDK_RGB_DITHER_MAX
-} GdkRgbDither;
-
-#ifndef GDK_DISABLE_DEPRECATED
-
 struct _GdkRgbCmap {
   guint32 colors[256];
   gint n_colors;
@@ -54,6 +45,7 @@ struct _GdkRgbCmap {
   GSList *info_list;
 };
 
+#ifndef GDK_DISABLE_DEPRECATED
 void gdk_rgb_init (void);
 
 gulong gdk_rgb_xpixel_from_rgb   (guint32      rgb) G_GNUC_CONST;
@@ -62,10 +54,18 @@ void   gdk_rgb_gc_set_foreground (GdkGC
 void   gdk_rgb_gc_set_background (GdkGC       *gc,
 				  guint32      rgb);
 #define gdk_rgb_get_cmap               gdk_rgb_get_colormap
+#endif /* GDK_DISABLE_DEPRECATED */
 
 void   gdk_rgb_find_color        (GdkColormap *colormap,
 				  GdkColor    *color);
 
+typedef enum
+{
+  GDK_RGB_DITHER_NONE,
+  GDK_RGB_DITHER_NORMAL,
+  GDK_RGB_DITHER_MAX
+} GdkRgbDither;
+
 void        gdk_draw_rgb_image              (GdkDrawable  *drawable,
 					     GdkGC        *gc,
 					     gint          x,
@@ -141,7 +141,6 @@ GdkVisual *  gdk_rgb_get_visual   (void)
 gboolean     gdk_rgb_ditherable   (void);
 gboolean     gdk_rgb_colormap_ditherable (GdkColormap *cmap);
 #endif
-#endif /* GDK_DISABLE_DEPRECATED */
 
 G_END_DECLS
 
--- gtk+-2.24.23/gdk/gdkspawn.h
+++ gtk+-2.24.23/gdk/gdkspawn.h
@@ -30,7 +30,6 @@
 
 G_BEGIN_DECLS
 
-#ifndef GDK_DISABLE_DEPRECATED
 gboolean gdk_spawn_on_screen              (GdkScreen             *screen,
 					   const gchar           *working_directory,
 					   gchar                **argv,
@@ -57,7 +56,6 @@ gboolean gdk_spawn_on_screen_with_pipes
 gboolean gdk_spawn_command_line_on_screen (GdkScreen             *screen,
 					   const gchar           *command_line,
 					   GError               **error);
-#endif
 
 G_END_DECLS
 
--- gtk+-2.24.23/gdk/gdkwindow.h
+++ gtk+-2.24.23/gdk/gdkwindow.h
@@ -475,7 +475,6 @@ gboolean gdk_window_set_static_gravities
 					  gboolean   use_static);   
 
 /* Functions to create/lookup windows from their native equivalents */ 
-#if !defined(GDK_DISABLE_DEPRECATED) || defined(GDK_COMPILATION)
 #ifndef GDK_MULTIHEAD_SAFE
 GdkWindow*    gdk_window_foreign_new (GdkNativeWindow anid);
 GdkWindow*    gdk_window_lookup      (GdkNativeWindow anid);
@@ -484,7 +483,6 @@ GdkWindow    *gdk_window_foreign_new_for
 						  GdkNativeWindow  anid);
 GdkWindow*    gdk_window_lookup_for_display (GdkDisplay      *display,
 					     GdkNativeWindow  anid);
-#endif
 
 
 /* GdkWindow */
@@ -518,9 +516,7 @@ void gdk_window_set_urgency_hint      (G
 void          gdk_window_set_geometry_hints (GdkWindow          *window,
 					     const GdkGeometry  *geometry,
 					     GdkWindowHints      geom_mask);
-#if !defined(GDK_DISABLE_DEPRECATED) || defined(GDK_COMPILATION)
 void          gdk_set_sm_client_id          (const gchar        *sm_client_id);
-#endif
 
 void	      gdk_window_begin_paint_rect   (GdkWindow          *window,
 					     const GdkRectangle *rectangle);
@@ -577,7 +573,7 @@ void       gdk_window_coords_from_parent
                                           gdouble         *x,
                                           gdouble         *y);
 
-#if !defined (GDK_DISABLE_DEPRECATED) || defined (GDK_COMPILATION)
+#if !defined (GDK_DISABLE_DEPRECATED) || defined (GTK_COMPILATION) || defined (GDK_COMPILATION)
 /* Used by gtk_handle_box_button_changed () */
 gboolean      gdk_window_get_deskrelative_origin (GdkWindow	  *window,
 					  gint		  *x,
@@ -702,6 +698,10 @@ void gdk_window_get_internal_paint_info
 void gdk_window_enable_synchronized_configure (GdkWindow *window);
 void gdk_window_configure_finished            (GdkWindow *window);
 
+#ifndef GDK_MULTIHEAD_SAFE
+GdkPointerHooks *gdk_set_pointer_hooks (const GdkPointerHooks *new_hooks);   
+#endif /* GDK_MULTIHEAD_SAFE */
+
 GdkWindow *gdk_get_default_root_window (void);
 
 /* Offscreen redirection */
@@ -722,10 +722,6 @@ void       gdk_window_redirect_to_drawab
 void       gdk_window_remove_redirection     (GdkWindow     *window);
 
 #ifndef GDK_DISABLE_DEPRECATED
-#ifndef GDK_MULTIHEAD_SAFE
-GdkPointerHooks *gdk_set_pointer_hooks (const GdkPointerHooks *new_hooks);   
-#endif /* GDK_MULTIHEAD_SAFE */
-
 #define GDK_ROOT_PARENT()             (gdk_get_default_root_window ())
 #define gdk_window_get_size            gdk_drawable_get_size
 #define gdk_window_get_type            gdk_window_get_window_type
--- gtk+-2.24.23/gdk/x11/gdkx.h
+++ gtk+-2.24.23/gdk/x11/gdkx.h
@@ -34,7 +34,7 @@
 
 G_BEGIN_DECLS
 
-#if (!defined (GDK_DISABLE_DEPRECATED) && !defined (GDK_MULTIHEAD_SAFE)) || defined (GDK_COMPILATION)
+#ifndef GDK_MULTIHEAD_SAFE
 extern Display          *gdk_display;
 #endif
 
@@ -50,10 +50,8 @@ Display *gdk_x11_cursor_get_xdisplay
 Cursor   gdk_x11_cursor_get_xcursor       (GdkCursor   *cursor);
 Display *gdk_x11_display_get_xdisplay     (GdkDisplay  *display);
 Visual * gdk_x11_visual_get_xvisual       (GdkVisual   *visual);
-#if !defined(GDK_DISABLE_DEPRECATED) || defined(GDK_COMPILATION)
 Display *gdk_x11_gc_get_xdisplay          (GdkGC       *gc);
 GC       gdk_x11_gc_get_xgc               (GdkGC       *gc);
-#endif
 Screen * gdk_x11_screen_get_xscreen       (GdkScreen   *screen);
 int      gdk_x11_screen_get_screen_number (GdkScreen   *screen);
 void     gdk_x11_window_set_user_time     (GdkWindow   *window,
@@ -75,7 +73,7 @@ gint     gdk_x11_get_default_screen
 #define GDK_IMAGE_XDISPLAY(image)     (gdk_x11_image_get_xdisplay (image))
 #define GDK_IMAGE_XIMAGE(image)       (gdk_x11_image_get_ximage (image))
 
-#if (!defined (GDK_DISABLE_DEPRECATED) && !defined (GDK_MULTIHEAD_SAFE)) || defined (GDK_COMPILATION)
+#ifndef GDK_MULTIHEAD_SAFE
 #define GDK_DISPLAY()                 gdk_display
 #endif
 
@@ -127,11 +125,9 @@ gint     gdk_x11_get_default_screen
 
 GdkVisual* gdk_x11_screen_lookup_visual (GdkScreen *screen,
 					 VisualID   xvisualid);
-#ifndef GDK_DISABLE_DEPRECATED
 #ifndef GDK_MULTIHEAD_SAFE
 GdkVisual* gdkx_visual_get            (VisualID   xvisualid);
 #endif
-#endif
 
 #ifdef GDK_ENABLE_BROKEN
 /* XXX: An X Colormap is useless unless we also have the visual. */
@@ -141,10 +137,9 @@ GdkColormap* gdkx_colormap_get (Colormap
 GdkColormap *gdk_x11_colormap_foreign_new (GdkVisual *visual,
 					   Colormap   xcolormap);
 
-#if !defined (GDK_DISABLE_DEPRECATED) || defined (GDK_COMPILATION)
+     /* Return the Gdk* for a particular XID */
 gpointer      gdk_xid_table_lookup_for_display (GdkDisplay *display,
 						XID         xid);
-#endif
 guint32       gdk_x11_get_server_time  (GdkWindow       *window);
 guint32       gdk_x11_display_get_user_time (GdkDisplay *display);
 
@@ -166,10 +161,8 @@ XID      gdk_x11_screen_get_monitor_outp
                                               gint       monitor_num);
 
 #ifndef GDK_MULTIHEAD_SAFE
-#ifndef GDK_DISABLE_DEPRECATED
 gpointer      gdk_xid_table_lookup   (XID              xid);
 gboolean      gdk_net_wm_supports    (GdkAtom    property);
-#endif
 void          gdk_x11_grab_server    (void);
 void          gdk_x11_ungrab_server  (void);
 #endif
--- gtk+-2.24.23/gtk/gtkaboutdialog.h
+++ gtk+-2.24.23/gtk/gtkaboutdialog.h
@@ -141,14 +141,12 @@ typedef void (* GtkAboutDialogActivateLi
 						 const gchar    *link_,
 						 gpointer        data);
 
-#ifndef GTK_DISABLE_DEPRECATED
 GtkAboutDialogActivateLinkFunc gtk_about_dialog_set_email_hook (GtkAboutDialogActivateLinkFunc func,
 								gpointer                       data,
 								GDestroyNotify                 destroy);
 GtkAboutDialogActivateLinkFunc gtk_about_dialog_set_url_hook   (GtkAboutDialogActivateLinkFunc func,
 								gpointer                       data,
 								GDestroyNotify                 destroy);
-#endif
 
 G_END_DECLS
 
--- gtk+-2.24.23/gtk/gtkbox.h
+++ gtk+-2.24.23/gtk/gtkbox.h
@@ -48,6 +48,7 @@ G_BEGIN_DECLS
 
 typedef struct _GtkBox	      GtkBox;
 typedef struct _GtkBoxClass   GtkBoxClass;
+typedef struct _GtkBoxChild   GtkBoxChild;
 
 struct _GtkBox
 {
@@ -64,32 +65,6 @@ struct _GtkBoxClass
   GtkContainerClass parent_class;
 };
 
-/**
- * GtkBoxChild:
- * @widget: the child widget, packed into the GtkBox.
- * @padding: the number of extra pixels to put between this child and its
- *  neighbors, set when packed, zero by default.
- * @expand: flag indicates whether extra space should be given to this child.
- *  Any extra space given to the parent GtkBox is divided up among all children
- *  with this attribute set to %TRUE; set when packed, %TRUE by default.
- * @fill: flag indicates whether any extra space given to this child due to its
- *  @expand attribute being set is actually allocated to the child, rather than
- *  being used as padding around the widget; set when packed, %TRUE by default.
- * @pack: one of #GtkPackType indicating whether the child is packed with
- *  reference to the start (top/left) or end (bottom/right) of the GtkBox.
- * @is_secondary: %TRUE if the child is secondary
- *
- * The #GtkBoxChild holds a child widget of #GtkBox and describes how the child
- * is to be packed into the #GtkBox. All fields of this #GtkBoxChild should be
- * considered read-only and they should never be set directly by an application.
- * Use gtk_box_query_child_packing() and gtk_box_set_child_packing() to query
- * and set the #GtkBoxChild.padding, #GtkBoxChild.expand, #GtkBoxChild.fill and
- * #GtkBoxChild.pack fields.
- *
- * Deprecated: 2.22: Use gtk_container_get_children() instead.
- */
-#if !defined (GTK_DISABLE_DEPRECATED) || defined (GTK_COMPILATION)
-typedef struct _GtkBoxChild   GtkBoxChild;
 struct _GtkBoxChild
 {
   GtkWidget *widget;
@@ -99,7 +74,7 @@ struct _GtkBoxChild
   guint pack : 1;
   guint is_secondary : 1;
 };
-#endif
+
 
 GType       gtk_box_get_type            (void) G_GNUC_CONST;
 GtkWidget* _gtk_box_new                 (GtkOrientation  orientation,
--- gtk+-2.24.23/gtk/gtkcomboboxentry.h
+++ gtk+-2.24.23/gtk/gtkcomboboxentry.h
@@ -29,8 +29,6 @@
 
 G_BEGIN_DECLS
 
-#ifndef GTK_DISABLE_DEPRECATED
-
 #define GTK_TYPE_COMBO_BOX_ENTRY             (gtk_combo_box_entry_get_type ())
 #define GTK_COMBO_BOX_ENTRY(obj)             (G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_COMBO_BOX_ENTRY, GtkComboBoxEntry))
 #define GTK_COMBO_BOX_ENTRY_CLASS(vtable)    (G_TYPE_CHECK_CLASS_CAST ((vtable), GTK_TYPE_COMBO_BOX_ENTRY, GtkComboBoxEntryClass))
@@ -74,7 +72,6 @@ gint        gtk_combo_box_entry_get_text
 /* convenience -- text */
 GtkWidget  *gtk_combo_box_entry_new_text        (void);
 
-#endif
 
 G_END_DECLS
 
--- gtk+-2.24.23/gtk/gtkcombobox.h
+++ gtk+-2.24.23/gtk/gtkcombobox.h
@@ -125,8 +125,6 @@ void               gtk_combo_box_set_ent
 							 gint                text_column);
 gint               gtk_combo_box_get_entry_text_column  (GtkComboBox        *combo_box);
 
-#if !defined (GTK_DISABLE_DEPRECATED) || defined (GTK_COMPILATION)
-
 /* convenience -- text */
 GtkWidget    *gtk_combo_box_new_text         (void);
 void          gtk_combo_box_append_text      (GtkComboBox     *combo_box,
@@ -140,8 +138,6 @@ void          gtk_combo_box_remove_text
                                               gint             position);
 gchar        *gtk_combo_box_get_active_text  (GtkComboBox     *combo_box);
 
-#endif
-
 /* programmatic control */
 void          gtk_combo_box_popup            (GtkComboBox     *combo_box);
 void          gtk_combo_box_popdown          (GtkComboBox     *combo_box);
--- gtk+-2.24.23/gtk/gtkdialog.h
+++ gtk+-2.24.23/gtk/gtkdialog.h
@@ -153,11 +153,9 @@ GtkWidget* gtk_dialog_get_widget_for_res
 gint gtk_dialog_get_response_for_widget (GtkDialog *dialog,
 					 GtkWidget *widget);
 
-#if !defined (GTK_DISABLE_DEPRECATED) || defined (GTK_COMPILATION)
 void     gtk_dialog_set_has_separator (GtkDialog *dialog,
                                        gboolean   setting);
 gboolean gtk_dialog_get_has_separator (GtkDialog *dialog);
-#endif
 
 gboolean gtk_alternative_dialog_button_order (GdkScreen *screen);
 void     gtk_dialog_set_alternative_button_order (GtkDialog *dialog,
--- gtk+-2.24.23/gtk/gtkhruler.h
+++ gtk+-2.24.23/gtk/gtkhruler.h
@@ -38,8 +38,6 @@
 #error "Only <gtk/gtk.h> can be included directly."
 #endif
 
-#ifndef GTK_DISABLE_DEPRECATED
-
 #ifndef __GTK_HRULER_H__
 #define __GTK_HRULER_H__
 
@@ -80,5 +78,3 @@ G_END_DECLS
 
 
 #endif /* __GTK_HRULER_H__ */
-
-#endif /* GTK_DISABLE_DEPRECATED */
--- gtk+-2.24.23/gtk/gtkitem.h
+++ gtk+-2.24.23/gtk/gtkitem.h
@@ -70,11 +70,9 @@ struct _GtkItemClass
 
 
 GType gtk_item_get_type (void) G_GNUC_CONST;
-#if !defined(GTK_DISABLE_DEPRECATED) || defined(GTK_COMPILATION)
 void  gtk_item_select   (GtkItem *item);
 void  gtk_item_deselect (GtkItem *item);
 void  gtk_item_toggle   (GtkItem *item);
-#endif
 
 G_END_DECLS
 
--- gtk+-2.24.23/gtk/gtklinkbutton.h
+++ gtk+-2.24.23/gtk/gtklinkbutton.h
@@ -75,11 +75,9 @@ const gchar *         gtk_link_button_ge
 void                  gtk_link_button_set_uri           (GtkLinkButton *link_button,
 						         const gchar   *uri);
 
-#ifndef GTK_DISABLE_DEPRECATED
 GtkLinkButtonUriFunc  gtk_link_button_set_uri_hook      (GtkLinkButtonUriFunc func,
 							 gpointer             data,
 							 GDestroyNotify       destroy);
-#endif
 
 gboolean              gtk_link_button_get_visited       (GtkLinkButton *link_button);
 void                  gtk_link_button_set_visited       (GtkLinkButton *link_button,
--- gtk+-2.24.23/gtk/gtkmain.h
+++ gtk+-2.24.23/gtk/gtkmain.h
@@ -129,10 +129,10 @@ gboolean gtk_init_check_abi_check (int
 
 #ifndef GTK_DISABLE_DEPRECATED
 void     gtk_exit                 (gint    error_code);
-gchar *        gtk_set_locale           (void);
 #endif /* GTK_DISABLE_DEPRECATED */
 
 void           gtk_disable_setlocale    (void);
+gchar *        gtk_set_locale           (void);
 PangoLanguage *gtk_get_default_language (void);
 gboolean       gtk_events_pending       (void);
 
@@ -156,7 +156,6 @@ void	   gtk_grab_add		   (GtkWidget
 GtkWidget* gtk_grab_get_current	   (void);
 void	   gtk_grab_remove	   (GtkWidget	       *widget);
 
-#if !defined (GTK_DISABLE_DEPRECATED) || defined (GTK_COMPILATION)
 void	   gtk_init_add		   (GtkFunction	       function,
 				    gpointer	       data);
 void	   gtk_quit_add_destroy	   (guint	       main_level,
@@ -171,6 +170,7 @@ guint	   gtk_quit_add_full	   (guint
 				    GDestroyNotify     destroy);
 void	   gtk_quit_remove	   (guint	       quit_handler_id);
 void	   gtk_quit_remove_by_data (gpointer	       data);
+#ifndef GTK_DISABLE_DEPRECATED
 guint	   gtk_timeout_add	   (guint32	       interval,
 				    GtkFunction	       function,
 				    gpointer	       data);
--- gtk+-2.24.23/gtk/gtknotebook.h
+++ gtk+-2.24.23/gtk/gtknotebook.h
@@ -54,19 +54,13 @@ typedef enum
 
 typedef struct _GtkNotebook       GtkNotebook;
 typedef struct _GtkNotebookClass  GtkNotebookClass;
-#if !defined (GTK_DISABLE_DEPRECATED) || defined (GTK_COMPILATION)
 typedef struct _GtkNotebookPage   GtkNotebookPage;
-#endif
 
 struct _GtkNotebook
 {
   GtkContainer container;
   
-#if !defined (GTK_DISABLE_DEPRECATED) || defined (GTK_COMPILATION)
   GtkNotebookPage *GSEAL (cur_page);
-#else
-  gpointer GSEAL (cur_page);
-#endif
   GList *GSEAL (children);
   GList *GSEAL (first_tab);		/* The first tab visible (for scrolling notebooks) */
   GList *GSEAL (focus_tab);
@@ -103,11 +97,7 @@ struct _GtkNotebookClass
   GtkContainerClass parent_class;
 
   void (* switch_page)       (GtkNotebook     *notebook,
-#if !defined (GTK_DISABLE_DEPRECATED) || defined (GTK_COMPILATION)
                               GtkNotebookPage *page,
-#else
-                              gpointer         page,
-#endif
 			      guint            page_num);
 
   /* Action signals for keybindings */
@@ -180,18 +170,19 @@ void gtk_notebook_remove_page       (Gtk
  *           Tabs drag and drop                            *
  ***********************************************************/
 
-#ifndef GTK_DISABLE_DEPRECATED
 void gtk_notebook_set_window_creation_hook (GtkNotebookWindowCreationFunc  func,
 					    gpointer                       data,
                                             GDestroyNotify                 destroy);
+#ifndef GTK_DISABLE_DEPRECATED
 void gtk_notebook_set_group_id             (GtkNotebook *notebook,
 					    gint         group_id);
 gint gtk_notebook_get_group_id             (GtkNotebook *notebook);
 
+#endif /* GTK_DISABLE_DEPRECATED */
+
 void gtk_notebook_set_group                (GtkNotebook *notebook,
 					    gpointer     group);
 gpointer gtk_notebook_get_group            (GtkNotebook *notebook);
-#endif /* GTK_DISABLE_DEPRECATED */
 
 void         gtk_notebook_set_group_name   (GtkNotebook *notebook,
                                             const gchar *group_name);
--- gtk+-2.24.23/gtk/gtkobject.h
+++ gtk+-2.24.23/gtk/gtkobject.h
@@ -74,7 +74,6 @@ G_BEGIN_DECLS
 #define GTK_OBJECT_TYPE_NAME              G_OBJECT_TYPE_NAME
 #endif
 
-#if !defined (GTK_DISABLE_DEPRECATED) || defined (GTK_COMPILATION)
 /* GtkObject only uses the first 4 bits of the flags field.
  * Derived objects may use the remaining bits. Though this
  * is a kinda nasty break up, it does make the size of
@@ -83,7 +82,9 @@ G_BEGIN_DECLS
 typedef enum
 {
   GTK_IN_DESTRUCTION	= 1 << 0, /* Used internally during dispose */
+#if !defined (GTK_DISABLE_DEPRECATED) || defined (GTK_COMPILATION)
   GTK_FLOATING		= 1 << 1,
+#endif
   GTK_RESERVED_1	= 1 << 2,
   GTK_RESERVED_2	= 1 << 3
 } GtkObjectFlags;
@@ -99,7 +100,6 @@ typedef enum
  */
 #define GTK_OBJECT_SET_FLAGS(obj,flag)	  G_STMT_START{ (GTK_OBJECT_FLAGS (obj) |= (flag)); }G_STMT_END
 #define GTK_OBJECT_UNSET_FLAGS(obj,flag)  G_STMT_START{ (GTK_OBJECT_FLAGS (obj) &= ~(flag)); }G_STMT_END
-#endif
 
 typedef struct _GtkObjectClass	GtkObjectClass;
 
--- gtk+-2.24.23/gtk/gtkrange.h
+++ gtk+-2.24.23/gtk/gtkrange.h
@@ -135,11 +135,9 @@ struct _GtkRangeClass
 
 GType              gtk_range_get_type                      (void) G_GNUC_CONST;
 
-#ifndef GTK_DISABLE_DEPRECATED
 void               gtk_range_set_update_policy             (GtkRange      *range,
                                                             GtkUpdateType  policy);
 GtkUpdateType      gtk_range_get_update_policy             (GtkRange      *range);
-#endif /* GTK_DISABLE_DEPRECATED */
 
 void               gtk_range_set_adjustment                (GtkRange      *range,
                                                             GtkAdjustment *adjustment);
--- gtk+-2.24.23/gtk/gtkruler.h
+++ gtk+-2.24.23/gtk/gtkruler.h
@@ -38,8 +38,6 @@
 #error "Only <gtk/gtk.h> can be included directly."
 #endif
 
-#ifndef GTK_DISABLE_DEPRECATED
-
 #ifndef __GTK_RULER_H__
 #define __GTK_RULER_H__
 
@@ -132,5 +130,3 @@ void            gtk_ruler_draw_pos   (Gt
 G_END_DECLS
 
 #endif /* __GTK_RULER_H__ */
-
-#endif /* GTK_DISABLE_DEPRECATED */
--- gtk+-2.24.23/gtk/gtkstatusicon.h
+++ gtk+-2.24.23/gtk/gtkstatusicon.h
@@ -129,11 +129,9 @@ void                  gtk_status_icon_se
 							  gboolean            visible);
 gboolean              gtk_status_icon_get_visible        (GtkStatusIcon      *status_icon);
 
-#if !defined (GTK_DISABLE_DEPRECATED) || defined (GTK_COMPILATION)
 void                  gtk_status_icon_set_blinking       (GtkStatusIcon      *status_icon,
 							  gboolean            blinking);
 gboolean              gtk_status_icon_get_blinking       (GtkStatusIcon      *status_icon);
-#endif
 
 gboolean              gtk_status_icon_is_embedded        (GtkStatusIcon      *status_icon);
 
--- gtk+-2.24.23/gtk/gtktypeutils.h
+++ gtk+-2.24.23/gtk/gtktypeutils.h
@@ -47,13 +47,11 @@ GType gtk_identifier_get_type (void) G_G
  */
 typedef struct _GtkArg	       	     GtkArg;
 typedef struct _GtkObject   	     GtkObject; /* object forward declaration */
-#if !defined (GTK_DISABLE_DEPRECATED) || defined (GTK_COMPILATION)
 typedef gboolean (*GtkFunction)	    (gpointer      data);
 typedef void (*GtkCallbackMarshal)  (GtkObject    *object,
 				     gpointer      data,
 				     guint         n_args,
 				     GtkArg       *args);
-#endif
 
 /* This used to be defined in gtkitemfactory.h, but moved over here after
  * the complete deprecation of that header
--- gtk+-2.24.23/gtk/gtkvruler.h
+++ gtk+-2.24.23/gtk/gtkvruler.h
@@ -38,8 +38,6 @@
 #error "Only <gtk/gtk.h> can be included directly."
 #endif
 
-#ifndef GTK_DISABLE_DEPRECATED
-
 #ifndef __GTK_VRULER_H__
 #define __GTK_VRULER_H__
 
@@ -80,5 +78,3 @@ G_END_DECLS
 
 
 #endif /* __GTK_VRULER_H__ */
-
-#endif /* GTK_DISABLE_DEPRECATED */
--- gtk+-2.24.23/gtk/gtkwidget.h
+++ gtk+-2.24.23/gtk/gtkwidget.h
@@ -114,9 +114,7 @@ typedef enum
   GTK_HAS_GRAB	       = 1 << 15,
   GTK_RC_STYLE	       = 1 << 16,
   GTK_COMPOSITE_CHILD  = 1 << 17,
-#ifndef GTK_DISABLE_DEPRECATED
   GTK_NO_REPARENT      = 1 << 18,
-#endif
   GTK_APP_PAINTABLE    = 1 << 19,
   GTK_RECEIVES_DEFAULT = 1 << 20,
   GTK_DOUBLE_BUFFERED  = 1 << 21,
@@ -447,17 +445,8 @@ typedef enum
  * @flag: the flags to set.
  *
  * Turns on certain widget flags.
- *
- * Deprecated: 2.22: Use the proper function instead: gtk_widget_set_app_paintable(),
- *   gtk_widget_set_can_default(), gtk_widget_set_can_focus(),
- *   gtk_widget_set_double_buffered(), gtk_widget_set_has_window(),
- *   gtk_widget_set_mapped(), gtk_widget_set_no_show_all(),
- *   gtk_widget_set_realized(), gtk_widget_set_receives_default(),
- *   gtk_widget_set_sensitive() or gtk_widget_set_visible().
- *
  */
 #define GTK_WIDGET_SET_FLAGS(wid,flag)	  G_STMT_START{ (GTK_WIDGET_FLAGS (wid) |= (flag)); }G_STMT_END
-/* FIXME: Deprecating GTK_WIDGET_SET_FLAGS requires fixing GTK internals. */
 
 /**
  * GTK_WIDGET_UNSET_FLAGS:
@@ -465,11 +454,8 @@ typedef enum
  * @flag: the flags to unset.
  *
  * Turns off certain widget flags.
- *
- * Deprecated: 2.22: Use the proper function instead. See GTK_WIDGET_SET_FLAGS().
  */
 #define GTK_WIDGET_UNSET_FLAGS(wid,flag)  G_STMT_START{ (GTK_WIDGET_FLAGS (wid) &= ~(flag)); }G_STMT_END
-/* FIXME: Deprecating GTK_WIDGET_UNSET_FLAGS requires fixing GTK internals. */
 
 #define GTK_TYPE_REQUISITION              (gtk_requisition_get_type ())
 
@@ -844,14 +830,12 @@ void	   gtk_widget_set		  (GtkWidget
 					   const gchar         *first_property_name,
 					   ...) G_GNUC_NULL_TERMINATED;
 #endif /* GTK_DISABLE_DEPRECATED */
-#if !defined(GTK_DISABLE_DEPRECATED) || defined (GTK_COMPILATION)
-void       gtk_widget_hide_all            (GtkWidget           *widget);
-#endif
 void	   gtk_widget_unparent		  (GtkWidget	       *widget);
 void	   gtk_widget_show		  (GtkWidget	       *widget);
 void       gtk_widget_show_now            (GtkWidget           *widget);
 void	   gtk_widget_hide		  (GtkWidget	       *widget);
 void	   gtk_widget_show_all		  (GtkWidget	       *widget);
+void	   gtk_widget_hide_all		  (GtkWidget	       *widget);
 void       gtk_widget_set_no_show_all     (GtkWidget           *widget,
 					   gboolean             no_show_all);
 gboolean   gtk_widget_get_no_show_all     (GtkWidget           *widget);
@@ -1268,10 +1252,8 @@ void	     gtk_widget_input_shape_combine
 						  gint       offset_x,
 						  gint       offset_y);
 
-#if !defined(GTK_DISABLE_DEPRECATED) || defined (GTK_COMPILATION)
 /* internal function */
 void	     gtk_widget_reset_shapes	   (GtkWidget *widget);
-#endif
 
 /* Compute a widget's path in the form "GtkWindow.MyLabel", and
  * return newly alocated strings.
--- gtk+-2.24.23/gtk/gtkwindow.h
+++ gtk+-2.24.23/gtk/gtkwindow.h
@@ -256,7 +256,7 @@ gboolean   gtk_window_is_active
 gboolean   gtk_window_has_toplevel_focus       (GtkWindow           *window);
 
 
-#ifndef GTK_DISABLE_DEPRECATED
+
 /* gtk_window_set_has_frame () must be called before realizing the window_*/
 void       gtk_window_set_has_frame            (GtkWindow *window, 
 						gboolean   setting);
@@ -271,7 +271,6 @@ void       gtk_window_get_frame_dimensio
 						gint      *top,
 						gint      *right,
 						gint      *bottom);
-#endif
 void       gtk_window_set_decorated            (GtkWindow *window,
                                                 gboolean   setting);
 gboolean   gtk_window_get_decorated            (GtkWindow *window);
