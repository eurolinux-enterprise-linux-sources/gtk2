--- gtk+-2.24.23/modules/printbackends/cups/gtkcupsutils.c
+++ gtk+-2.24.23/modules/printbackends/cups/gtkcupsutils.c
@@ -1534,7 +1534,8 @@ gtk_cups_result_get_error_string (GtkCup
  * a socket for communication with a CUPS server 'server'.
  */
 GtkCupsConnectionTest *
-gtk_cups_connection_test_new (const char *server)
+gtk_cups_connection_test_new (const char *server,
+                              const int   port)
 {
   GtkCupsConnectionTest *result = NULL;
 #ifdef HAVE_CUPS_API_1_2
@@ -1542,7 +1543,10 @@ gtk_cups_connection_test_new (const char
 
   result = g_new (GtkCupsConnectionTest, 1);
 
-  port_str = g_strdup_printf ("%d", ippPort ());
+  if (port >= 0)
+    port_str = g_strdup_printf ("%d", port);
+  else
+    port_str = g_strdup_printf ("%d", ippPort ());
 
   if (server != NULL)
     result->addrlist = httpAddrGetList (server, AF_UNSPEC, port_str);
--- gtk+-2.24.23/modules/printbackends/cups/gtkcupsutils.h
+++ gtk+-2.24.23/modules/printbackends/cups/gtkcupsutils.h
@@ -191,7 +191,8 @@ GtkCupsErrorType        gtk_cups_result_
 int                     gtk_cups_result_get_error_status   (GtkCupsResult      *result);
 int                     gtk_cups_result_get_error_code     (GtkCupsResult      *result);
 const char            * gtk_cups_result_get_error_string   (GtkCupsResult      *result);
-GtkCupsConnectionTest * gtk_cups_connection_test_new       (const char            *server);
+GtkCupsConnectionTest * gtk_cups_connection_test_new       (const char         *server,
+                                                            const int           port);
 GtkCupsConnectionState  gtk_cups_connection_test_get_state (GtkCupsConnectionTest *test);
 void                    gtk_cups_connection_test_free      (GtkCupsConnectionTest *test);
 
--- gtk+-2.24.23/modules/printbackends/cups/gtkprintbackendcups.c
+++ gtk+-2.24.23/modules/printbackends/cups/gtkprintbackendcups.c

@@ -3299,7 +3299,7 @@ cups_get_printer_list (GtkPrintBackend *
   cups_backend = GTK_PRINT_BACKEND_CUPS (backend);
 
   if (cups_backend->cups_connection_test == NULL)
-    cups_backend->cups_connection_test = gtk_cups_connection_test_new (NULL);
+    cups_backend->cups_connection_test = gtk_cups_connection_test_new (NULL, -1);
 
   if (cups_backend->list_printers_poll == 0)
     {
@@ -3681,7 +3681,7 @@ cups_get_default_printer (GtkPrintBacken
   cups_backend = backend;
 
   if (cups_backend->cups_connection_test == NULL)
-    cups_backend->cups_connection_test = gtk_cups_connection_test_new (NULL);
+    cups_backend->cups_connection_test = gtk_cups_connection_test_new (NULL, -1);
 
   if (cups_backend->default_printer_poll == 0)
     {
@@ -3816,7 +3816,9 @@ cups_printer_request_details (GtkPrinter
         {
           if (cups_printer->get_remote_ppd_poll == 0)
             {
-              cups_printer->remote_cups_connection_test = gtk_cups_connection_test_new (cups_printer->hostname);
+              cups_printer->remote_cups_connection_test =
+                gtk_cups_connection_test_new (cups_printer->hostname,
+                                              cups_printer->port);
 
               if (cups_request_ppd (printer))
                 cups_printer->get_remote_ppd_poll = gdk_threads_add_timeout (50,
