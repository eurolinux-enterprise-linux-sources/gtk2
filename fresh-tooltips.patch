--- gtk+-2.24.23/gtk/gtktooltip.c
+++ gtk+-2.24.23/gtk/gtktooltip.c
@@ -603,6 +603,63 @@ draw_round_rect (cairo_t *cr,
   cairo_close_path (cr);
 }
 
+static guint
+get_tooltip_radius (GtkWidget *widget)
+{
+  guint tooltip_radius;
+  gboolean new_tooltip_style;
+  GParamSpecUInt *pspec;
+
+  gtk_widget_style_get (widget,
+                        "tooltip-radius", &tooltip_radius,
+                        "new-tooltip-style", &new_tooltip_style,
+                        NULL);
+
+  if (new_tooltip_style)
+    {
+      pspec = G_PARAM_SPEC_UINT (gtk_widget_class_find_style_property (GTK_WIDGET_GET_CLASS (widget),
+                                                                       "tooltip-radius"));
+      if (pspec != NULL)
+        {
+          if (pspec->default_value == tooltip_radius)
+            tooltip_radius = MAX (MIN (widget->style->xthickness, widget->style->ythickness), 1);
+        }
+    }
+
+  return tooltip_radius;
+}
+
+static guchar
+get_tooltip_alpha (GtkWidget *widget)
+{
+  guchar tooltip_alpha;
+  gboolean new_tooltip_style;
+  GParamSpecUChar *pspec;
+
+  gtk_widget_style_get (widget,
+                        "tooltip-alpha", &tooltip_alpha,
+                        "new-tooltip-style", &new_tooltip_style,
+                        NULL);
+
+  if (new_tooltip_style)
+    {
+      pspec = G_PARAM_SPEC_UCHAR (gtk_widget_class_find_style_property (GTK_WIDGET_GET_CLASS (widget),
+                                                                        "tooltip-alpha"));
+      if (pspec != NULL)
+        {
+          if (pspec->default_value == tooltip_alpha)
+            {
+              if (gdk_screen_is_composited (gtk_widget_get_screen (widget)))
+                tooltip_alpha = 230;
+              else
+                tooltip_alpha = 255;
+            }
+        }
+    }
+
+  return tooltip_alpha;
+}
+
 static void
 fill_background (GtkWidget  *widget,
                  cairo_t    *cr,
@@ -615,9 +672,7 @@ fill_background (GtkWidget  *widget,
   if (!gtk_widget_is_composited (widget))
     alpha = 255;
 
-  gtk_widget_style_get (widget,
-                        "tooltip-radius", &tooltip_radius,
-                        NULL);
+  tooltip_radius = get_tooltip_radius (widget);
 
   cairo_set_operator (cr, CAIRO_OPERATOR_CLEAR);
   cairo_paint (cr);
@@ -651,9 +706,7 @@ update_shape (GtkTooltip *tooltip)
   cairo_t *cr;
   gint width, height, tooltip_radius;
 
-  gtk_widget_style_get (tooltip->window,
-                        "tooltip-radius", &tooltip_radius,
-                        NULL);
+  tooltip_radius = get_tooltip_radius (GTK_WIDGET (tooltip->window));
 
   if (tooltip_radius == 0 ||
       gtk_widget_is_composited (tooltip->window))
@@ -682,10 +735,8 @@ gtk_tooltip_paint_window (GtkTooltip *to
   guchar tooltip_alpha;
   gint tooltip_radius;
 
-  gtk_widget_style_get (tooltip->window,
-                        "tooltip-alpha", &tooltip_alpha,
-                        "tooltip-radius", &tooltip_radius,
-                        NULL);
+  tooltip_alpha = get_tooltip_alpha (GTK_WIDGET (tooltip->window));
+  tooltip_radius = get_tooltip_radius (GTK_WIDGET (tooltip->window));
 
   if (tooltip_alpha != 255 || tooltip_radius != 0)
     {
--- gtk+-2.24.23/gtk/gtkwidget.c
+++ gtk+-2.24.23/gtk/gtkwidget.c
@@ -2612,6 +2619,14 @@ gtk_widget_class_init (GtkWidgetClass *k
                                                               P_("The radius to be used when drawing tooltips"),
                                                               0, G_MAXINT, 0,
                                                               GTK_PARAM_READABLE));
+
+  gtk_widget_class_install_style_property (klass,
+                                           g_param_spec_boolean ("new-tooltip-style",
+                                                                 NULL,
+                                                                 NULL,
+                                                                 FALSE,
+                                                                 GTK_PARAM_READABLE));
+
 }
 
 static void
